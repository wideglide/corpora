# Copyright 2021-2022 The OpenSSL Project Authors. All Rights Reserved.
#
# Licensed under the Apache License 2.0 (the "License").  You may not use
# this file except in compliance with the License.  You can obtain a copy
# in the file LICENSE in the source distribution or at
# https://www.openssl.org/source/license.html

name: OpenSSL

on: [workflow_dispatch]

env:
  RUN_TESTS: false

permissions:
  contents: read

jobs:
  unix:
    name: ${{matrix.os}}_${{matrix.arch}}_${{matrix.compiler}}_${{matrix.opt}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12, ubuntu-22.04]
        compiler: [gcc-11, clang]
        arch: [x86_64]
        opt: [O1, O2]
    steps:
    - name: Checkout openssl
      uses: actions/checkout@v3
      with:
        repository: openssl/openssl
        path: openssl
        ref: openssl-3.0.8

    - name: prepare the build directory
      run: mkdir openssl/_build

    - name: configure
      working-directory: openssl/_build
      run: |
        ../config --banner=Configured enable-fips shared \
            -g -${{matrix.opt}}
        sed -i -e '/FLAGS/s/-O[0123s]/-${{matrix.opt}}/' ${{ matrix.build-dir || '.' }}/Makefile
        ./configdata.pm --dump
      env:
        CC: ${{matrix.compiler}}

    - name: build
      working-directory: openssl/_build
      run: make -j4

    - name: Save debug info
      if: runner.os == 'macOS'
      working-directory: openssl/_build
      run: |
        dsymutil --flat *.dylib
        dsymutil *.dylib
        ls -lah *.dylib.*

    - name: make test
      if: ${{ env.RUN_TESTS == 'true' }}
      working-directory: openssl/_build
      run: make test HARNESS_JOBS=${HARNESS_JOBS:-4}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.os}}_${{matrix.arch}}_${{matrix.compiler}}_${{matrix.opt}}
        path: |
          openssl/_build/**/libcrypto.dylib
          openssl/_build/**/libssl.dylib
          openssl/_build/**/libcrypto.dylib.dSYM
          openssl/_build/**/libssl.dylib.dSYM
          openssl/_build/**/libcrypto.dylib.dwarf
          openssl/_build/**/libssl.dylib.dwarf
          openssl/_build/**/libcrypto*.so
          openssl/_build/**/libssl*.so
        retention-days: 2

  windows:
    name: ${{matrix.os}}_${{matrix.arch}}_${{matrix.compiler}}_${{matrix.opt}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2022]
        compiler: [cl]
        opt: [O1]
        arch: [x86_64, x86]
        include:
          - os: windows-2022
            configure_name: VC-WIN64A
          - os: windows-2022
            configure_name: VC-WIN32
            arch: x86
    steps:
    - name: Checkout openssl
      uses: actions/checkout@v3
      with:
        repository: openssl/openssl
        path: openssl
        ref: openssl-3.0.8

    - uses: shogo82148/actions-setup-perl@v1
    - uses: ilammy/setup-nasm@v1
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: ${{matrix.arch}}

    - name: prepare the build directory
      run: mkdir openssl/_build

    - name: configure
      working-directory: openssl/_build
      run: |
        perl ..\Configure --banner=Configured `
            --prefix=${{github.workspace}}\install `
            --openssldir=${{github.workspace}}\install\ssl `
            no-makedepend shared no-fips `
            ${{matrix.configure_name}} `
            /${{matrix.opt}} /Zi /nologo 
        perl configdata.pm --dump

    - name: build
      working-directory: openssl/_build
      run: nmake /NOLOGO

    - name: install
      working-directory: openssl/_build
      run: nmake /NOLOGO install

    - name: Save install files
      uses: actions/cache/save@v3
      if: runner.os == 'Windows'
      id: cache-openssl-save
      with:
        path: install
        key: openssl_${{matrix.os}}_${{matrix.arch}}_${{matrix.compiler}}_${{matrix.opt}}

    - name: test
      if: ${{ env.RUN_TESTS == 'true' }}
      working-directory: openssl/_build
      run: nmake test VERBOSE_FAILURE=yes HARNESS_JOBS=4

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.os}}_${{matrix.arch}}_${{matrix.compiler}}_${{matrix.opt}}
        path: |
          openssl/_build/libcrypto*.dll
          openssl/_build/libcrypto*.pdb
          openssl/_build/libssl*.dll
          openssl/_build/libssl*.pdb
          openssl/_build/**/openssl*.exe
          openssl/_build/**/openssl*.pdb
        retention-days: 2

  combine:
    name: Combine artifacts
    needs: [unix, windows]
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with: 
        path: openssl

    - name: Show downloaded files
      run: find openssl -type f -ls

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: openssl-builds
        path: openssl/**
        retention-days: 7

