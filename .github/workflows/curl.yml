name: curl-CMake
on: [push]
jobs:
  cmake_macos:
    name: ${{ matrix.os }}_${{ matrix.arch }}_${{ matrix.compiler }}_${{ matrix.opt }}
    runs-on: ${{ matrix.os }}
    env: ${{ matrix.compiler }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12]
        arch: [x86_64]
        compiler:
        - name: Clang
          CC: clang
          CXX: clang++
          CFLAGS: "-mmacosx-version-min=10.15 -Wno-deprecated-declarations -g"
        - name: GCC
          CC: gcc-11
          CXX: g++-11
          CFLAGS: "-mmacosx-version-min=10.15 -Wno-error=undef -Wno-error=conversion -g"
        build:
        - name: OpenSSL
          install: nghttp2 openssl
          generate: -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCURL_DISABLE_LDAP=ON -DCURL_DISABLE_LDAPS=ON
        - name: libssh2
          install: nghttp2 openssl libssh2
          generate: -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCURL_USE_LIBSSH2=ON
    steps:
    - uses: lukka/get-cmake@latest

    - run: echo libtool autoconf automake pkg-config ${{ matrix.build.install }} | xargs -Ix -n1 echo brew '"x"' > /tmp/Brewfile
      name: 'brew bundle'

    - run: "while [[ $? == 0 ]]; do for i in 1 2 3; do brew update && brew bundle install --no-lock --file /tmp/Brewfile && break 2 || { echo Error: wait to try again; sleep 10; } done; false Too many retries; done"
      name: 'brew install'

    - run: python3 -m pip install impacket
      name: 'pip3 install'

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        repository: curl/curl

    - run: cmake -S. -Bbuild ${{ matrix.build.generate }} -DCMAKE_BUILD_TYPE=RelWithDebInfo
      name: 'cmake generate'

    - run: cmake --build build
      name: 'cmake build'

    - name: Save debug info
      if: runner.os == 'macOS'
      run: |
        dsymutil --flat libcurl.dylib
        dsymutil libcurl.dylib
        dsymutil --flag curl
        dsymutil curl

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}_${{ matrix.arch }}_${{ matrix.compiler }}_${{ matrix.opt }}
        path: |
          **/libcurl*.dylib
          **/libcurl.dylib.dSYM
          **/libcurl.dylib.dwarf
          **/libcurl.so
        retention-days: 2

  cmake_linux:
    name: ${{ matrix.os }}_${{ matrix.arch }}_${{ matrix.compiler }}_${{ matrix.opt }}
    runs-on: ${{ matrix.os }}
    env: ${{ matrix.compiler }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        arch: [x86_64]
        compiler:
        - CC: clang
          CXX: clang++
          CFLAGS: "-Wno-deprecated-declarations -g"
        - CC: gcc-11
          CXX: g++-11
          CFLAGS: "-Wno-error=undef -Wno-error=conversion -g"
        build:
        - name: OpenSSL
          install: nghttp2 libssl-dev
          generate: -DCURL_DISABLE_LDAP=ON -DCURL_DISABLE_LDAPS=ON
        - name: libssh2
          install: nghttp2 libssl-dev libssh2-1-dev zlib1g-dev libnghttp2-dev
          generate: -DCURL_USE_LIBSSH2=ON
    steps:
    - uses: lukka/get-cmake@latest

    - name: 'install prereqs and impacket'
      run: |
        sudo apt-get update
        sudo apt-get install libtool autoconf automake pkg-config stunnel4 libpsl-dev libbrotli-dev libzstd-dev ${{ matrix.build.install }}
        sudo python3 -m pip install impacket

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        repository: curl/curl

    - run: cmake -S. -Bbuild -GNinja ${{ matrix.build.generate }} -DCMAKE_BUILD_TYPE=RelWithDebInfo
      name: 'cmake generate'

    - run: cmake --build build
      name: 'cmake build'

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}_${{ matrix.arch }}_${{ matrix.compiler }}_${{ matrix.opt }}
        path: |
          **/libcurl.so
          **/curl
        retention-days: 2
