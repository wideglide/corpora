name: curl-CMake
on: [push]

jobs:
  cmake_macos:
    name: ${{ matrix.os }}_${{ matrix.arch }}_${{ matrix.compiler.CC }}_${{ matrix.opt }}_${{ matrix.build.name }}
    runs-on: ${{ matrix.os }}
    env:
      DEVELOPER_DIR: /Applications/Xcode_14.0.1.app/Contents/Developer
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12]
        arch: [x86_64]
        opt: [O2]
        compiler:
        - CC: clang
          CXX: clang++
          CFLAGS: "-mmacosx-version-min=10.15 -Wno-deprecated-declarations -g"
        - CC: gcc-11
          CXX: g++-11
          CFLAGS: "-mmacosx-version-min=10.15 -Wno-error=undef -Wno-error=conversion -g"
        build:
        - name: OpenSSL
          install: nghttp2 openssl
          generate: -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCURL_DISABLE_LDAP=ON -DCURL_DISABLE_LDAPS=ON
        - name: libssh2
          install: nghttp2 openssl libssh2
          generate: -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl -DCURL_USE_LIBSSH2=ON
    steps:
    - uses: lukka/get-cmake@latest

    - run: echo libtool autoconf automake pkg-config ${{ matrix.build.install }} | xargs -Ix -n1 echo brew '"x"' > /tmp/Brewfile
      name: 'brew bundle'

    - run: "while [[ $? == 0 ]]; do for i in 1 2 3; do brew update && brew bundle install --no-lock --file /tmp/Brewfile && break 2 || { echo Error: wait to try again; sleep 10; } done; false Too many retries; done"
      name: 'brew install'

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        repository: curl/curl

    - run: cmake -S. -Bbuild -GNinja -DPICKY_COMPILER=OFF ${{ matrix.build.generate }} -DCMAKE_BUILD_TYPE=RelWithDebInfo
      name: 'cmake generate'
      env: ${{ matrix.compiler }}

    - run: cmake --build build --verbose
      name: 'cmake build'

    - name: Save debug info
      if: runner.os == 'macOS'
      working-directory: build
      run: |
        dsymutil --flat lib/libcurl.dylib
        dsymutil lib/libcurl.dylib
        dsymutil --flat src/curl
        dsymutil src/curl

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}_${{ matrix.arch }}_${{ matrix.compiler }}_${{ matrix.opt }}
        path: |
          build/**/libcurl*.dylib
          build/**/libcurl.dylib.dSYM
          build/**/libcurl.dylib.dwarf
        retention-days: 2

  cmake_linux:
    name: ${{ format('{0}_{1}_{2}_{3}_{4}', matrix.os, matrix.arch, matrix.compiler.CC, matrix.opt, matrix.build.name) }}
    runs-on: ${{ matrix.os }}
    env: ${{ matrix.compiler }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        arch: [x86_64]
        opt: [O1]
        compiler:
        - CC: clang
          CXX: clang++
          CFLAGS: "-Wno-deprecated-declarations -g"
        - CC: gcc-11
          CXX: g++-11
          CFLAGS: "-Wno-error=undef -Wno-error=conversion -g"
        build:
        - name: OpenSSL
          install: nghttp2 libssl-dev
          generate: -DCURL_DISABLE_LDAP=ON -DCURL_DISABLE_LDAPS=ON
        - name: libssh2
          install: libssl-dev libssh2-1-dev zlib1g-dev libnghttp2-dev
          generate: -DCURL_USE_LIBSSH2=ON
    steps:
    - uses: lukka/get-cmake@latest

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        repository: curl/curl

    - run: |
        cmake --version
        cmake -S. -Bbuild -GNinja -DPICKY_COMPILER=OFF -DCMAKE_INSTALL_PREFIX=./install ${{ matrix.build.generate }} -DCMAKE_BUILD_TYPE=RelWithDebInfo
        ${{ matrix.sed || 'sed -i -e' }} '/CMAKE_C_FLAGS/s/O[0123sd]/${{ matrix.opt }}/' build/CMakeCache.txt
        grep CMAKE_C_FLAGS build/CMakeCache.txt
      name: 'cmake generate'

    - run: cmake --build build --verbose
      name: 'cmake build'

    - run: cmake --install build --verbose
      name: 'cmake install'

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}_${{ matrix.arch }}_${{ matrix.compiler }}_${{ matrix.opt }}
        path: |
          build/lib/libcurl.so
          build/src/curl
          install/lib/libcurl.so
          install/bin/curl
        retention-days: 2
