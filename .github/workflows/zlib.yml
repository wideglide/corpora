name: zlib-CMake
run-name: zlib ${{inputs.build_ref || github.event.head_commit.message}}

on:
  push:
    paths:
      - .github/workflows/zlib.yml
  workflow_dispatch:
    inputs:
      run_tests:
        description: 'Run tests after build'
        required: true
        default: false
        type: boolean
      build_ref:
        description: 'The branch, tag or SHA to checkout'
        default: 'v1.2.13'
        type: string


env:
  BUILD_TYPE: RelWithDebInfo
  build_ref: 'v1.2.13'

jobs:
  ci-cmake:
    name: ${{matrix.os}}_${{matrix.arch}}_${{matrix.compiler}}_${{matrix.opt}}
    runs-on: ${{matrix.os}}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022, macos-12]
        compiler: [gcc, clang]
        opt: [O1, O2]
        arch: [x86_64]
        exclude:
          - os: macos-12
            compiler: gcc
        include:
          - os: windows-2022
            compiler: cl
            arch: x86
            opt: O1

          - os: windows-2022
            compiler: cl
            arch: x86
            opt: O2

          - os: windows-2022
            compiler: cl
            arch: x86_64
            opt: O1

          - os: windows-2022
            compiler: cl
            arch: amd64_arm64
            opt: O1

          - os: macos-12
            compiler: gcc-11
            arch: x86_64
            opt: O1

          - os: macos-12
            compiler: gcc-11
            arch: x86_64
            opt: O2

          - os: macos-12
            compiler: clang
            arch: arm64
            opt: O1
            generate: -DCMAKE_OSX_ARCHITECTURES=arm64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        repository: madler/zlib
        ref: ${{ inputs.build_ref || env.build_ref }}

    - uses: lukka/get-cmake@latest

    - name: Setup MSVC-CMD (Windows)
      uses: ilammy/msvc-dev-cmd@v1
      if: runner.os == 'Windows'
      with:
        arch: ${{ matrix.arch || 'x64' }}
        vsversion: '2022'

    - name: Generate project files
      run: |
        ${{matrix.compiler}} --version
        cmake -S ${{ matrix.src-dir || '.' }} -B ${{ matrix.build-dir || '.' }} -GNinja -DCMAKE_INSTALL_PREFIX=install -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} ${{matrix.generate}}
        sed -i -e '/CMAKE_C_FLAGS/s/O[0123sd]/${{matrix.opt}}/' ${{ matrix.build-dir || '.' }}/CMakeCache.txt
        ninja --version || echo NO NINJA
      env:
        CC: ${{matrix.compiler}}

    - name: Compile source code
      run: cmake --build ${{ matrix.build-dir || '.' }} --verbose

    - name: Install
      run: cmake --install ${{ matrix.build-dir || '.' }} --verbose

    - name: Save install files
      uses: actions/cache/save@v3
      if: runner.os == 'Windows'
      id: cache-zlib-save
      with:
        path: install
        key: zlib_${{matrix.os}}_${{matrix.arch}}_${{matrix.compiler}}_${{matrix.opt}}_${{env.build_ref}}

    - name: Save debug info
      if: runner.os == 'macOS'
      run: |
        dsymutil --flat libz.dylib
        dsymutil libz.dylib

    - name: Run test cases
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure --max-width 120
      continue-on-error: true
      working-directory: ${{ matrix.build-dir || '.' }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.os}}_${{matrix.arch}}_${{matrix.compiler}}_${{matrix.opt}}
        path: |
          **/zlib.dll
          **/zlib.pdb
          **/libz*.dylib
          **/libz.dylib.dSYM
          **/libz.dylib.dwarf
          **/libz.so
          **/libzlib.dll
        retention-days: 2

  combine:
    name: Combine artifacts
    needs: ci-cmake
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        path: zlib

    - name: Show downloaded files
      run: find zlib -type f -ls

    - name: Show file types
      run: find zlib -type f -exec file {} \;

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: zlib-builds_${{inputs.build_ref || env.build_ref }}
        path: zlib/**
        retention-days: 7

